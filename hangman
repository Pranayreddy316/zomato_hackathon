{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ca90009-eebd-471d-83b1-81cf98d7f176",
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "from hangman_words import word_list\n",
    "from hangman_art import stages,logo\n",
    "chosen_word=random.choice(word_list)\n",
    "lives=6\n",
    "print(f'Pssst, the solution is {chosen_word}.')\n",
    "print(logo)\n",
    "print(len(stages))\n",
    "display=[]\n",
    "guessed=[]\n",
    "for i in range(len(chosen_word)):\n",
    "   display.append(\"_\")\n",
    "while \"_\" in display and lives >0:\n",
    "\tguess=input(\"Guess a letter:\").lower()\n",
    "\tif len(guess)==1 and guess.isalpha():\n",
    "\t\tif guess in guessed:\n",
    "\t\t\tprint(\"letter already present\")\n",
    "\t\t\tcontinue\n",
    "\t\tguessed.append(guess)  \n",
    "\t\tfor i in range(len(chosen_word)):\n",
    "letter=chosen_word[i]\n",
    "\t\t\tif letter==guess:\n",
    "\t\t\t\tdisplay[i]=letter\t\n",
    "\t\tif guess not in chosen_word:\n",
    "\t\t\tif lives > 0:\t\n",
    "\t\t\t\tlives=lives-1\n",
    "\t\t\t\tif lives==0:\n",
    "\t\t\t\t\tprint(stages[lives])\n",
    "\t\t\t\t\tprint(f'the solution is {chosen_word}.')\n",
    "\t\t\t\t\tprint(\"You loose\")\n",
    "\t\t\t\t\texit(1)\n",
    "\t\tprint(f\"{' '.join(display)}\")\n",
    "\t\tprint(lives)\n",
    "\t\tprint(stages[lives])\n",
    "\telse:\n",
    "\t\tprint(\"guess should be a character rather than a word\")\n",
    "\telse:\n",
    "\tprint(\"You have won\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
